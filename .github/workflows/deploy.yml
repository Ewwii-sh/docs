name: Deploy Docusaurus Site

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache apt-get package lists
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libcairo2-dev \
            libglib2.0-dev \
            libgirepository1.0-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libgtk-3-dev

      - name: Cache Rust toolchain
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Node dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Clone Ewwii repo
        run: git clone https://github.com/Ewwii-sh/ewwii.git ewwii

      - name: Generate Rhai docs
        run: cargo run --release -p generate-rhai-docs
        working-directory: ./ewwii

      - name: Copy generated docs
        run: |
          mkdir -p ./docs/modules
          cp -r ./ewwii/tools/generate-rhai-docs/* ./docs/modules/

      - name: Build site
        run: pnpm run build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
