"use strict";(self.webpackChunkewwii_docs=self.webpackChunkewwii_docs||[]).push([[6848],{508:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(9729);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},5440:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"commands/update","title":"ewwii update","description":"The update command refreshes the widgets rendered on the screen. It allows you to immediately reflect changes in your widget configuration.","source":"@site/versioned_docs/version-0.3.0-alpha/commands/update.md","sourceDirName":"commands","slug":"/commands/update","permalink":"/docs/commands/update","draft":false,"unlisted":false,"tags":[],"version":"0.3.0-alpha","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ewwii engine-override","permalink":"/docs/commands/engine_override"},"next":{"title":"Troubleshooting","permalink":"/docs/troubleshooting"}}');var r=i(5813),s=i(508);const o={},a="ewwii update",d={},c=[{value:"Injecting variables with <code>--inject</code>",id:"injecting-variables-with---inject",level:2},{value:"Preserving updates with <code>--preserve</code>",id:"preserving-updates-with---preserve",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ewwii-update",children:(0,r.jsx)(n.code,{children:"ewwii update"})})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"update"})," command refreshes the widgets rendered on the screen. It allows you to immediately reflect changes in your widget configuration."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ewwii update\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"injecting-variables-with---inject",children:["Injecting variables with ",(0,r.jsx)(n.code,{children:"--inject"})]}),"\n",(0,r.jsxs)(n.p,{children:["You can manually inject values into the configuration using the ",(0,r.jsx)(n.code,{children:"--inject"})," argument. This allows you to explicitly set variable values during an update."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'ewwii update --inject "VAR1=bar,VAR2=foo2"\n# or in short\newwii update -i "VAR1=baz,VAR2=zoo"\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"preserving-updates-with---preserve",children:["Preserving updates with ",(0,r.jsx)(n.code,{children:"--preserve"})]}),"\n",(0,r.jsxs)(n.p,{children:["When you inject variables, the state is only updated temporarily. That means that if some other poll/listen variable triggered a update, your update will get overridden. So, this is why the ",(0,r.jsx)(n.code,{children:"--preserve"})," flag exists. This flag allows you to preserve the variables in memory until it's overridden."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'ewwii update -i "foo=hello" --preserve\n# or in short\newwii update -i "foo=hello" -p\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);