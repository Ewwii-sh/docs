"use strict";(self.webpackChunkewwii_docs=self.webpackChunkewwii_docs||[]).push([[9326],{508:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(9729);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},1456:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"config_and_syntax/rendering_and_best_practices","title":"Rendering and Best Practices","description":"Rendering children in your widgets","source":"@site/versioned_docs/version-0.1.4/config_and_syntax/rendering_and_best_practices.md","sourceDirName":"config_and_syntax","slug":"/config_and_syntax/rendering_and_best_practices","permalink":"/docs/config_and_syntax/rendering_and_best_practices","draft":false,"unlisted":false,"tags":[],"version":"0.1.4","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"The Rhai Expression Engine","permalink":"/docs/config_and_syntax/expression_language"},"next":{"title":"Variables","permalink":"/docs/config_and_syntax/variables"}}');var t=i(5813),a=i(508);const s={},o="Rendering and Best Practices",c={},d=[{value:"Rendering children in your widgets",id:"rendering-children-in-your-widgets",level:2},{value:"Window ID",id:"window-id",level:2},{value:"Generating a list of widgets from array using <code>for</code>",id:"generating-a-list-of-widgets-from-array-using-for",level:2},{value:"Splitting up your configuration",id:"splitting-up-your-configuration",level:2},{value:"Using <code>import/export</code>",id:"using-importexport",level:3},{value:"Using a separate ewwii configuration directory",id:"using-a-separate-ewwii-configuration-directory",level:3}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rendering-and-best-practices",children:"Rendering and Best Practices"})}),"\n",(0,t.jsx)(n.h2,{id:"rendering-children-in-your-widgets",children:"Rendering children in your widgets"}),"\n",(0,t.jsx)(n.p,{children:"As your configuration grows, you might want to improve its structure by factoring out pieces into reusable functions."}),"\n",(0,t.jsxs)(n.p,{children:["In Ewwii\u2019s Rhai-based configuration system, you can define wrapper functions that return widgets and accept a ",(0,t.jsx)(n.code,{children:"children"})," parameter (or any parameter that you prefer), just like built-in widgets such as ",(0,t.jsx)(n.code,{children:"box()"})," or ",(0,t.jsx)(n.code,{children:"button()"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example of a custom container that adds a label before its children:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'fn labeled_container(name, children = []) {\n  return box(#{ class: "container" }, [label(#{text: name})] + children)\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can call it like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'labeled_container("foo", [\n  button(#{ onclick: "notify-send hey ho", label: "Click me" }),\n]);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Because children are just a list of widgets, you can also write functions that structure them however you'd like. For example, here's a layout that places the first two children side by side:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'fn two_boxes(children = []) {\n  return box(#{}, [\n    box(#{ class: "first" }, [children[0]]),\n    box(#{ class: "second" }, [children[1]])\n  ]);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"And call it like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'two_boxes([label(#{ text: "First" }), label(#{ text: "Second" })]);\n'})}),"\n",(0,t.jsx)(n.p,{children:"If a child is missing (e.g., children[1] doesn't exist), make sure to handle that gracefully or document the expected number of children."}),"\n",(0,t.jsx)(n.h2,{id:"window-id",children:"Window ID"}),"\n",(0,t.jsx)(n.p,{children:"In some cases you may want to use the same window configuration for multiple widgets, e.g. for multiple windows. This is where arguments and ids come in."}),"\n",(0,t.jsxs)(n.p,{children:["Firstly let us start off with ids. An id can be specified in the ",(0,t.jsx)(n.code,{children:"open"})," command\nwith ",(0,t.jsx)(n.code,{children:"--id"}),", by default the id will be set to the name of the window\nconfiguration. These ids allow you to spawn multiple of the same windows. So\nfor example you can do:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ewwii open my_bar --screen 0 --id primary\newwii open my_bar --screen 1 --id secondary\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"generating-a-list-of-widgets-from-array-using-for",children:["Generating a list of widgets from array using ",(0,t.jsx)(n.code,{children:"for"})]}),"\n",(0,t.jsxs)(n.p,{children:["If you want to display a list of values, you can use the ",(0,t.jsx)(n.code,{children:"for"}),"-Element to fill a container with a list of elements generated from a JSON-array."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"let my_array = [1, 2, 3];\n\n// Then, inside your widget, you can use\nbox(#{}, [\n  for entry in my_array {\n    button(#{ onclick: `notify-send 'click' 'button ${entry}'`, label: entry.to_string() })\n  }\n])\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This can be useful in many situations, for example when generating a workspace list from an array representation of your workspaces.\nIn many cases, this can be used instead of ",(0,t.jsx)(n.code,{children:"literal"}),", and should most likely be preferred in those cases."]}),"\n",(0,t.jsx)(n.h2,{id:"splitting-up-your-configuration",children:"Splitting up your configuration"}),"\n",(0,t.jsx)(n.p,{children:"As time passes, your configuration might grow larger and larger. Luckily, you can easily split up your configuration into multiple files!"}),"\n",(0,t.jsx)(n.p,{children:"There are two options to achieve this:"}),"\n",(0,t.jsxs)(n.h3,{id:"using-importexport",children:["Using ",(0,t.jsx)(n.code,{children:"import/export"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// in ./foo/baz.rhai\n/// Note: all functions are automatically exported.\nfn greet() { return "Greetings!" }\nlet PI = 3.14159\nexport PI; // we need to export variables manually\n\n// in ./ewwii.rhai\nimport "foo/baz" as example;\nprint(example::greet()); // Greetings!\nprint(example::PI); // 3.14159\n'})}),"\n",(0,t.jsxs)(n.p,{children:["A rhai file may import the contents of any other rhai file that they export. For this, make use of the ",(0,t.jsx)(n.code,{children:"import"})," directive. If you are exporting a variable/function, make use the ",(0,t.jsx)(n.code,{children:"export"})," directive."]}),"\n",(0,t.jsx)(n.h3,{id:"using-a-separate-ewwii-configuration-directory",children:"Using a separate ewwii configuration directory"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to separate different widgets even further, you can create a new ewwii config folder anywhere else.\nThen, you can tell ewwii to use that configuration directory by passing ",(0,t.jsx)(n.em,{children:"every"})," command the ",(0,t.jsx)(n.code,{children:"--config /path/to/your/config/dir"})," flag.\nMake sure to actually include this in all your ",(0,t.jsx)(n.code,{children:"ewwii"})," calls, including ",(0,t.jsx)(n.code,{children:"ewwii\xa0kill"}),", ",(0,t.jsx)(n.code,{children:"eww\xa0logs"}),", etc.\nThis launches a separate instance of the ewwii daemon that has separate logs and state from your main ewwii configuration."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'ewwii --config "/path/to/your/config/dir"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);